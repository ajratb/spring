/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ayrat' at '10.01.17 11:11' with Gradle 2.7
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.7/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gs-accessing-data-jpa'
    version =  '0.1.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    
}
// In this section you declare the dependencies for your production and test code

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile ("junit:junit")
}
